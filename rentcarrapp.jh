
entity Merchant {
   companyName String required
   brandName String
   inn String 
   owner String
   phone String
   address String
}

entity MerchantBranch {
  name String
  address String
  latitude String
  longitude String
  phone String
}

entity MerchantRole {
   merchantRoleType MerchantRoleEnum
}

enum MerchantRoleEnum {
   OWNER, MERCHANT_ADMIN, MERCHANT_SALES, MERCHANT_CONTENT
}

entity User {}

relationship ManyToOne {
    MerchantBranch{merchant} to Merchant
    MerchantRole{user} to User
    MerchantRole{merchant} to Merchant
    MerchantRole{merchantBranch} to MerchantBranch
}

entity Attachment {
   fileName String
   fileSize Integer
   originalFileName String
   path String
   ext String
}

entity Brand {
   name String required                                           
   status Boolean
}

relationship OneToOne {
    Brand{attachment} to Attachment
}

entity Model {
   name String
   status Boolean
}

entity Color {
   name String 
   hex  String
   status Boolean
} 

entity Param {
   name String 
   description String
   fieldType FieldTypeEnum
   status Boolean
   isDefault Boolean
}

enum FieldTypeEnum {
   INPUT_FIELD, TEXT_FIELD, INT_FIELD, YEAR_FIELD, DATE_FIELD, DATETIME_FIELD, SELECT_FIELD
}

entity ParamValue {
   name String
   status Boolean
}

entity Translation {
   entityType String
   entityId Long
   lang LanguageEnum
   value String
   description String
}

enum LanguageEnum {
   UZ, RU, EN
}

relationship ManyToOne {
   Model{brand} to Brand
   ParamValue{param} to Param
}




// Set pagination options
paginate Merchant, MerchantRole, Param, ParamValue, Translation, Color, Model with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
