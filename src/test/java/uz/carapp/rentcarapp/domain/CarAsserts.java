package uz.carapp.rentcarapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CarAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarAllPropertiesEquals(Car expected, Car actual) {
        assertCarAutoGeneratedPropertiesEquals(expected, actual);
        assertCarAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarAllUpdatablePropertiesEquals(Car expected, Car actual) {
        assertCarUpdatableFieldsEquals(expected, actual);
        assertCarUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarAutoGeneratedPropertiesEquals(Car expected, Car actual) {
        assertThat(actual)
            .as("Verify Car auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarUpdatableFieldsEquals(Car expected, Car actual) {
        assertThat(actual)
            .as("Verify Car relevant properties")
            .satisfies(a -> assertThat(a.getStateNumberPlate()).as("check stateNumberPlate").isEqualTo(expected.getStateNumberPlate()))
            .satisfies(a -> assertThat(a.getDeposit()).as("check deposit").isEqualTo(expected.getDeposit()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarUpdatableRelationshipsEquals(Car expected, Car actual) {
        assertThat(actual)
            .as("Verify Car relationships")
            .satisfies(a -> assertThat(a.getModel()).as("check model").isEqualTo(expected.getModel()))
            .satisfies(a -> assertThat(a.getMerchant()).as("check merchant").isEqualTo(expected.getMerchant()))
            .satisfies(a -> assertThat(a.getMerchantBranch()).as("check merchantBranch").isEqualTo(expected.getMerchantBranch()));
    }
}
