package uz.carapp.rentcarapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CarParamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarParamAllPropertiesEquals(CarParam expected, CarParam actual) {
        assertCarParamAutoGeneratedPropertiesEquals(expected, actual);
        assertCarParamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarParamAllUpdatablePropertiesEquals(CarParam expected, CarParam actual) {
        assertCarParamUpdatableFieldsEquals(expected, actual);
        assertCarParamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarParamAutoGeneratedPropertiesEquals(CarParam expected, CarParam actual) {
        assertThat(actual)
            .as("Verify CarParam auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarParamUpdatableFieldsEquals(CarParam expected, CarParam actual) {
        assertThat(actual)
            .as("Verify CarParam relevant properties")
            .satisfies(a -> assertThat(a.getParamItemValue()).as("check paramItemValue").isEqualTo(expected.getParamItemValue()))
            .satisfies(a -> assertThat(a.getParamValue()).as("check paramValue").isEqualTo(expected.getParamValue()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarParamUpdatableRelationshipsEquals(CarParam expected, CarParam actual) {
        assertThat(actual)
            .as("Verify CarParam relationships")
            .satisfies(a -> assertThat(a.getCar()).as("check car").isEqualTo(expected.getCar()))
            .satisfies(a -> assertThat(a.getParam()).as("check param").isEqualTo(expected.getParam()));
    }
}
